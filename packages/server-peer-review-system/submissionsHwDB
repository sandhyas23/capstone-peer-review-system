{"assignment-name":"test","netId":"ih1407","content":"---\r\ntitle: Design Project 1\r\nauthor: Dr. Greg Bernstein\r\ndate: November 10th, 2018\r\n---\r\n\r\n# Design Project Part 1\r\n![testimg](https://drive.google.com/uc?export=view&id=1a_vqj533V9UX_IykDqvJIy8RMH3NuXKK)\r\n\r\n\r\n## Taking On A Large Project\r\n\r\nWhy?\r\n\r\n* Most \"real world\" projects are much bigger than a one or two week homework assignment\r\n\r\n* Some issues only become important in larger projects\r\n    * State management systems in large React front ends, e.g., Redux, Immutable, etc...\r\n    * Decomposition of a larger system into testable *pieces*.\r\n    * Server API design\r\n\r\n## Where to Start?\r\n\r\n* Describe what you want the project to do\r\n    * This is your initial *vision*\r\n    * You will refine it\r\n* Look at the project from different view points\r\n    * Different user types and how they use the system\r\n    * Technologies to be used, how the system would be deployed, e.g., client/server, stand alone application\r\n\r\n## Classic *Waterfall* Approach\r\n\r\n* Requirements: specification and analysis\r\n* Architecture: break system into subsystems\r\n* Design subsystems\r\n* Implement\r\n\r\n## Problem with *Waterfall*\r\n\r\n* Requirements are never completely known!\r\n* Small changes in requirements can sometimes significantly ease design/implementation\r\n* Most software projects **fail**! Need to constantly work on identifying risks and minimizing amount of work to do.\r\n\r\n## Alternative: Iterative Approach\r\n\r\n* Specify requirements out as best you can but be flexible to changes.\r\n* Work to identify *minimum viable product* (MVP).\r\n* Start architecture/design early to identify risky areas and reduce them by attacking them early.\r\n* Go back and revisit requirements and adjust based on what you've learned.\r\n\r\n\r\n## Question Pool Builder 1\r\n<small>Initial project vision</small>\r\n\r\n> I want to construct a multi-user web application to allow students to participate in the creation and evaluation of a \"question pool\" for a programming or other technical classes.\r\n\r\n## Question Pool Builder 2\r\n<small>Initial project vision</small>\r\n\r\n> Coming up with *good* questions in a subject area is a skill that will benefit students throughout their careers. This application will help the students by providing peer review of the questions that they submit to the pool.\r\n\r\n## More Project Ideas 1\r\n\r\nThere will be at least three types of questions for the students to create:\r\n\r\n* Flashcard type questions to aid in students learning basic terminology, language syntax, basic concepts.\r\n\r\n* Moderate length questions suitable for an exam question or a homework problem.\r\n\r\n* Programming assignments. These are longer and may involve providing extra materials to the students and more elaborate instructions on what to do and how to go about it.\r\n\r\n## More Project Ideas 2\r\n<small>Peer Reviews</small>\r\n\r\n* *peer reviews* will be \"double\" anonymous, in that the students performing the review will not know the identity of the student that wrote the Q/A, and the student receiving feedback will not know the identity of the reviewer.  \r\n\r\n* identities of submitters and reviewers will be known to teachers.\r\n\r\n* we will furnish mechanisms for students to report inappropriate questions or reviews to teachers.\r\n\r\n## System Users 1\r\nThe application will have a least the following users and roles:\r\n\r\n* **Administrator**: Sets up accounts for all users. Can add, delete or modify user privileges.\r\n\r\n* **Teacher(s)**: Creates question writing assignments, Monitors student submissions, assigns student submissions to other students for review, monitors reviews given by student to their peers, monitors progress on students performing reviews of others work.\r\n\r\n## System Users 2\r\n\r\n* **Students**: Submits *questions/answers* for peer review, performs peer review of Q/A submissions.  \r\n\r\n# Use Cases\r\n\r\n## AAA\r\n<small>How should we initialize the AAA system?</small>\r\n\r\nThe *admin* role is key and we need this at the start. We want to guard against \"default\" admin passwords and such. Maybe a separate Node.js script to setup and change the admin password. We could put restrictions on this\r\n\r\n## User Management 1\r\n\r\n* Bulk add user interface: Will want to be able to easily add users in bulk. We may assign an initial password. We may email that initial password to the user.  How to deal with multiple classes. We can start with just one.\r\n\r\n* Single user modification: *Password reset*, User add, User delete.  What about *undo* features here?\r\n\r\n* Monitoring of usage: Logins and such.\r\n\r\n## User Management 1\r\n\r\n* For now we will not be concerned with a \"self register\" capability, but may want to add in the future.\r\n\r\n* Users are assigned a default role of: *student*, the role of *teacher* is a privileged role and we must make sure that a users role cannot be mistakenly set to *teacher* or *admin*.\r\n\r\n## Teacher making assignments 1\r\n\r\n* **Assignment to create a Q/A**. Teacher will write up description of the task and release it to the students. The task should have a deadline.  Might the teacher attach categories to be applied to questions? For example in web dev we could have categories such as: HTML, CSS, DOM, Server, HTTP, etc... We'll want students to help categorize their Q/As.\r\n    1. Seems like we need some type of structure to keep track of assignments.\r\n\r\n## Teacher making assignments 2\r\n\r\n* **Assignment of reviews of Q/A**. Note that a student will typically review many more Q/As than they write. Why? It is easier to review a Q/A than to write a Q/A. We want to be able to look at multiple peer reviews to determine the quality of a question.\r\n\r\n## Teacher making assignments 3\r\n1. For each Q/A submitted we will need to keep track of all its reviews.\r\n2. A teacher will also want to see what kind of reviews a particular student gives to other students.\r\n\r\n## Teacher making assignments 4\r\n3. A teacher needs to assign Q/As to students to review, a student should never review their own work and we would like to make sure there is good \"diversity\" in who reviews who's work.\r\n4. Would the teacher be able to make a per assignment review criteria (rubric). How would one create score sheets for Q/As that then end up in students screens as a GUI?\r\n\r\n## Teacher making assignments 5\r\n<small>Teacher User Interface</small>\r\n\r\n1. Dashboard with summary of student work in progress.\r\n2. Task (Q/A assignment) creation interface\r\n3. Peer review assignment interface\r\n4. Peer review monitoring interface (per student, per Q/A)...\r\n5. Question pool view\r\n\r\n## Student  assignments/reviews 1\r\n<small>Submitting assignments</small>\r\n\r\n* We don't have to provide any fancy text editing. Students will submit in Markdown for now.\r\n\r\n* How can we deal with images? A large number of good CSS questions may take the form of giving some HTML, showing the user the image and asking them to produce CSS to achieve the result in the image.\r\n    1. Image directories tied to student name with image names tied to Q/A ids?\r\n\r\n## Student  assignments/reviews 2\r\n\r\n* How do students know what work they need to do? Could be Q/A submission, or peer reviews. Editing their reviews?\r\n    1. Some type of task lists they see after they log in.\r\n\r\n## Student  assignments/reviews 3\r\n<small>Student User Interface </small>\r\n\r\n1. Dashboard (show what needs to be done)\r\n2. Q/A creation interface\r\n3. Q/A peer review interface\r\n4. Question pool view? (limited view set by teacher?) What if we want to make sure students don't come up with the \"same\" questions.\r\n\r\n# Design 1\r\n\r\n## Initial Design\r\n\r\n* What data do we need to keep on the server?\r\n* What GUIs do we need on the front end?\r\n* Project naming conventions, definitions, and such to avoid confusion in design and development.\r\n\r\n## Crash and Burn\r\n\r\n* Too much weird terminology with Question and Answers\r\n* Need to get to the essence of the problem, i.e., MVP\r\n* Need to partition out functionality:\r\n    1. Generic server capabilities\r\n    2. Application Specific Server Capabilities\r\n    3. Front End/GUI functionality\r\n\r\n## Refine Requirements\r\n\r\n* Where are we being needlessly **specific**?\r\n* Where are we being needlessly **general**?\r\n* What is the **MVP**? Why bother?\r\n\r\n# Revised Requirements\r\n\r\n## Why Bother?\r\n<small>Why not use Blackboard?</small>\r\n\r\n* *Blackboard* seems to have some kind of peer review feature/capability.\r\n\r\n* *Blackboard* is ***unfriendly*** to most code files such as CSS, JavaScript, HTML, Markdown.\r\n\r\n* Want help for **coding** classes since these have the most problematic file types.\r\n\r\n## Needlessly Specific?\r\n\r\n* Having students come up with \"Questions and Answers\" is a great idea, but it is just one type of *assignment*.\r\n\r\n* Couldn't we just deal with general *assignments* as long as the input format is restricted to Markdown?\r\n\r\n* We must have *peer* review capabilities but these don't seem specific to \"question and answers\".\r\n\r\n## Changing Vision\r\n\r\n* Will work with general *assignments* submitted in **Markdown** rather than just \"Question and Answer\", i.e., we will move beyond a \"Question Pool Creator\".\r\n\r\n* Markdown submissions make us \"coding class\" friendly without dealing with lots of other file types.\r\n\r\n* We **must** support *peer* review to help overwhelmed teacher (me).\r\n\r\n## Needlessly General or Elaborate 1\r\n\r\n* Calendar based work flow, i.e., automatically closing out assignments after deadline, or opening assignments.\r\n    1. We can tag all submissions with their submission date and time. So its easy to tell late submissions.\r\n    2. Teacher can just add assignments and peer reviews as they desire.\r\n    3. They can also close out assignments and reviews to stop further work.\r\n\r\n## Needlessly General or Elaborate 2  \r\n\r\n* Elaborate editing revision system for submissions. Students can preview how the assignments will look but there will *not* be elaborate editing facilities, e.g., undo, redo, etc...\r\n  1. Students can and should keep local revision controlled copies. Our system will *not* do this.\r\n  2. We will want to make nice looking assignment outputs since everyone will have to look at these during peer review.\r\n\r\n## Our MVP\r\n<small>Minimum Viable Project</small>\r\n\r\n* A Multi-user assignment submission and peer review system\r\n* Three main roles: administrator, teacher, and student\r\n* Input format restricted to Markdown with supplementary images in PNG and JPEG format.\r\n* Teacher control of assignments and peer review process\r\n\r\n# Design 2\r\n\r\n## Data Modeling and Interfaces\r\n\r\n* What data do we need to keep on the server and why?\r\n* What will the server interfaces look like?\r\n* What are the needed Front-End GUIs? (React)\r\n\r\n## User Data\r\n\r\n* User information: name, email, password, role, id\r\n* JSON example:\r\n```javascript\r\n{\"name\": \"Generic Student\", \"email\": \"gs@csueastbay.edu\",\r\n    \"password\": \"password-hash\", \"role\": \"student\", \"_id\": \"ef4389\"}\r\n```\r\n\r\n## Assignment Task Data\r\n* Assignments: name/id, instructions, due date\r\n* Created by *Teacher*\r\n* JSON example:\r\n```javascript\r\n{\"task-name\": \"HW1.1\", \"instructions\": \"assignment instructions in markdown\",\r\n    \"due\": \"date-time string\", \"status\": \"open or closed\"}\r\n```\r\n\r\n## Peer Review Task Data\r\n* Peer Review Task: assignment name/id, grading rubric,\r\n* Created by *Teacher*\r\n* JSON example:\r\n```javascript\r\n{\"peer-review-for\": \"HW1.1\", \"instructions\": \"general grading instructions\",\r\n \"status\": \"open or closed\",\r\n\"rubric\": [{\"points\": 10, \"rubric-name\": \"Question\",\r\n            \"criteria\": \"instructions related to these points in MD\"},\r\n           {\"points\": 10, \"rubric-name\": \"Answer\",\r\n           \"criteria\": \"instructions related to these points in MD\"}\r\n          ]\r\n}\r\n```\r\n\r\n## Student Submission Data\r\n\r\n* Student submission: student id, submission id, content, assignment name/id\r\n    1. Will have a lot of these. May group by assignment name/id\r\n    2. Will not necessarily show submitting student id, e.g., student peer reviews.\r\n    3. Created by *Student*\r\n* Example JSON:\r\n```javascript\r\n{\"submission-id\": \"some kind of UID\", \"student-id\": \"ab4378\",\r\n\"assignment-name\": \"HW1.1\", \"content\": \"content in markdown format\"}\r\n```\r\n\r\n## Student Peer Review Data 1\r\n* Student peer review: peer review id, reviewing student id, id of work being reviewed, assignment name, id of creating student\r\n    1. There will be a lot of these. A given student will review N other students submissions for a given homework.\r\n    2. Created by *Student*\r\n\r\n## Student Peer Review Data 2\r\n* Example JSON:\r\n```javascript\r\n{\"pr-id\": \"some kind of UID\", \"submission-id\": \"UID of original submission\",\r\n\"reviewer-id\": \"ef4389\", \"submitter-id\": \"ab4378\",\r\n    \"assignment-name\": \"HW1.1\",\r\n    \"review\": {\"general-comments\": \"\",\r\n    \"rubric\": [{\"rubric-name\": \"Format\", \"possible-pts\":10, \"points-given\":8,\r\n                \"comments\": \"comments in markdown\"},\r\n               {\"rubric-name\": \"Question Quality\", \"possible-pts\":10,\r\n                \"points-given\":9,\r\n                \"comments\": \"Great idea!\"}]\r\n            }\r\n}\r\n```\r\n\r\n## Teacher Assignment/Review History Data\r\n1. Teacher needs to see the tasks currently and previously assigned\r\n2. Teacher needs to be able to create, read, update, and update tasks\r\n3. Key capability is \"opening and closing tasks\" for student work.\r\n4. Can this just be the entire task/review database(s)?\r\n\r\n\r\n## Student work queue/history 1\r\n1. Students need to know what they need to do.\r\n2. A structure indexed by student ID. For each of these can keep list of assignments and peer reviews.\r\n3. Each assignment or peer review will have a state of *open* or *closed*, it will reference the assignment or peer review **task**, it will not repeat this information.\r\n\r\n## Student work queue/history 2\r\n4. We will use this to show the students what they need to do.\r\n5. When the teacher creates a new assignment task or peer review task it will be added to every students structure.\r\n\r\n## User Interfaces\r\n\r\n* Administration\r\n* Teaching\r\n* Student\r\n\r\n## admin interface\r\n1. Create, update, delete, users\r\n2. Set user role. Default is student\r\n3. Review users and login history (including attempts)\r\n\r\n## Login interface\r\n\r\n  (admin, teacher, students)\r\n\r\n## Teacher Interface 1\r\n1. Assignment create, review, update, and delete\r\n    1. Make sure assignment a unique name we can use to identify it\r\n    2. Open/Close assignments\r\n\r\n## Teacher Interface 2        \r\n2. Review assignment submissions\r\n    1. See who has and hasn't turned in a submission\r\n    2. See all submissions from a given user\r\n    3. See peer review scores\r\n\r\n## Teacher Interface 3\r\n3. create peer review assignment\r\n    1. Need to help teacher assign a given assignment submission to N number of students for review.\r\n    2. Create peer review assignment. Each student will review N assignments from other students. They cannot review their own. Reviews are anonymous for students but teacher will know who reviewed which.\r\n    3. Create rubric to go with each assignment. Assume for now simple point and comment per item in rubric.\r\n\r\n## Teacher Interface 4\r\n4. Review Peer Reviews\r\n    1. Show for each assignment the reviews in both summary and full form.\r\n    2. Show statistics comparing one students reviews against others of the same assignments.\r\n\r\n\r\n## Student Interface\r\n1. Show current open assignments, peer reviews, and completion status\r\n\r\n2. Assignment submission and update\r\n\r\n3. Peer review submission and update\r\n","fileName":"DesignProject1.md","submittedOn":"2019-12-10T16:30:39.340Z","_id":"xaWqQ3X9OzcEMFNR"}
{"$$indexCreated":{"fieldName":"assignment-name","unique":false,"sparse":false}}
{"$$indexCreated":{"fieldName":"netId","unique":false,"sparse":false}}
